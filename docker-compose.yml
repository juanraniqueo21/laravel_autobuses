version: '3.8'

services:
  # ============================================
  # PostgreSQL Database
  # ============================================
  database:
    image: postgres:15-alpine
    container_name: gestion_buses_db
    environment:
      POSTGRES_DB: gestion_buses
      POSTGRES_USER: usuario_buses
      POSTGRES_PASSWORD: password_segura_aqui
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations_database.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - gestion_buses_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usuario_buses -d gestion_buses"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ============================================
  # Laravel Backend
  # ============================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gestion_buses_backend
    environment:
      - APP_NAME="GestiÃ³n de Buses"
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:8000
      - APP_KEY=
      - DB_CONNECTION=pgsql
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=gestion_buses
      - DB_USERNAME=usuario_buses
      - DB_PASSWORD=password_segura_aqui
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/vendor
      - /app/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - gestion_buses_network
    command: >
      sh -c "composer install &&
             php artisan migrate --force &&
             php artisan serve --host=0.0.0.0 --port=8000"
    restart: unless-stopped

  # ============================================
  # React Frontend
  # ============================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gestion_buses_frontend
    environment:
      - REACT_APP_API_URL=http://backend:8000
      - REACT_APP_API_BASE_URL=http://localhost:8000/api
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      
    depends_on:
      - backend
    networks:
      - gestion_buses_network
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    restart: unless-stopped

#Pgadmin 
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gestion_buses_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gestionbuses.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - gestion_buses_network
    restart: unless-stopped
volumes:
  postgres_data:
    driver: local
networks:
  gestion_buses_network:
    driver: bridge